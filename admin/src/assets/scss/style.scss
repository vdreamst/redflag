@import "variables";
//reset
* {
    box-sizing: border-box;
    outline: none;
}
html {
    font-size: 13px;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
}
p{
    line-height: 1.5rem;
}
a {
    color: #999;
}
//button

//text
.text-ellipsis{
    display:"inline-block";
    overflow: hidden;
    text-overflow: ellipsis;
    white-space:nowrap;
}
@each $key, $var in $colors {
    .text-#{$key} {
        color: $var;
    }
    .bg-#{$key} {
        background: $var;
    }
}
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var !important;
    }
}

@each $key, $var in $font-sizes {
    .fs-#{$key} {
        font-size: $var * $base-font-size;
    }
}
//默认按钮
.btn {
    border: none;
    border-radius: 0.1538rem;
    font-size: map-get($font-sizes, "sm") * $base-font-size;
    padding: 0.2rem 0.6rem;
}
//flex
.flex-wrap {
    flex-wrap: wrap;
}
.d-flex {
    display: flex;
}
.flex-column {
    flex-direction: column;
}

@each $key, $var in $flex-jc {
    .jc-#{$key} {
        justify-content: $var;
    }
}

@each $key, $var in $flex-ai {
    .ai-#{$key} {
        align-items: $var;
    }
}
//宽高
.w-100 {
    width: 100%;
}
.h-100 {
    height: 100%;
}
.flex-1 {
    flex: 1;
}
.flex-grow-1 {
    flex-grow: 1;
}

//spacing 定义内外边距=========================================================================
//内外
$spacing-types: (
    m: margin,
    p: padding,
);

@each $key, $var in $spacing-types {
    //m-0 p-0
    @each $k, $v in $spacing-size {
        .#{$key}-#{$k} {
            #{$var}: $v * $spacing-base-size;
        }
    }
    //mx-0 px-0
    @each $k, $v in $spacing-size {
        .#{$key}x-#{$k} {
            #{$var}-left: $v * $spacing-base-size;
            #{$var}-right: $v * $spacing-base-size;
        }
    }
    //my-0 py-0
    @each $k, $v in $spacing-size {
        .#{$key}y-#{$k} {
            #{$var}-top: $v * $spacing-base-size;
            #{$var}-bottom: $v * $spacing-base-size;
        }
    }
    //mt-0 pt-m
    @each $ke, $va in $spacing-directions {
        @each $k, $v in $spacing-size {
            .#{$key}#{$ke}-#{$k} {
                #{$var}-#{$va}: $v * $spacing-base-size;
            }
        }
    }
}

//=======================================================================================

.nav {
    display: flex;
    .nav-item {
        border-bottom: 3px solid transparent;
        padding-bottom: 0.2rem;
        &.active {
            color: map-get($map: $colors, $key: "primary");

            border-bottom: 3px solid map-get($map: $colors, $key: "primary");
        }
    }
    &.nav-inverse{

        .nav-item{
            color:map-get($map: $colors, $key: "white");
            &.active{
            border-bottom: 3px solid map-get($map: $colors, $key: "white");

            }

        }
    }
}

//psprite
.sprite {
    background: url(../images/icon/index.png) no-repeat;
    background-size: 28.8462rem;
    display: inline-block;
    &.sprite-news {
        width: 1.7692rem;
        height: 1.5385rem;
        background-position: 63.546% 15.517%;
    }
    &.sprite-arrow {
        width: 0.769231rem;
        height: 0.7692rem;
        background-position: 38.577% 52.076%;
    }
}


//borders

@each $dir in (top,right,bottom,left) {
   .border-#{$dir} {
       border-#{$dir}:1px solid $border-color
   }
}